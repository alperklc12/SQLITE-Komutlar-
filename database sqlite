from utils import database

USER_CHOICE = '[a]dd-[l]ist-[m]ark-[d]elete-[q]uit'


def main():

    database.create_data_file()

    user_input = input(USER_CHOICE)
    while user_input != 'q':
        if user_input == 'a':
            prompt_add_book()
        elif user_input == 'l':
            list_books()
        elif user_input == 'm':
            prompt_mark_book()
        elif user_input == 'd':
            prompt_delet_book()
        else:
            print('Not correct choice')

        user_input = input(USER_CHOICE)


def prompt_add_book():
    name = input('Enter book name')
    author = input('Enter book author')
    database.add_book(name, author)


def list_books():
    books_ = database.get_all()
    print('     -----------------------')
    print('               BOOKS')
    print('     -----------------------')
    for book in books_:
        status = 'Yes' if book[2] else 'No'
        print(f"{book[0]} writen by {book[1]} read: {status}")

    print()


def prompt_mark_book():
    name = input('Enter book name')
    database.mark_book(name)


def prompt_delet_book():
    name = input('Enter book name')
    database.delete_book(name)


if __name__ == '__main__':
    main()


************************************


"""
Stored book csv version
sqlite

"""
import os
import sqlite3

books_file = 'data.db'


def create_data_file():
    full_path = os.getcwd()
    relativ_path = full_path + '\\' + books_file

    if not os.path.isfile(relativ_path):
        connect = sqlite3.connect(books_file)
        cursor = connect.cursor()
        cursor.execute('CREATE TABLE books(name text, author text, read integer)')
        connect.close()


def add_book(name, author):
    connect = sqlite3.connect(books_file)
    cursor = connect.cursor()
    cursor.execute('INSERT INTO books(name, author, read) VALUES(?, ?, ?)', (name, author, 0))
    connect.commit()
    connect.close()


def mark_book(name):
    connect = sqlite3.connect(books_file)
    cursor = connect.cursor()
    cursor.execute('UPDATE books SET read=? WHERE name=?', (1, name))
    connect.commit()
    connect.close()


def delete_book(name):
    connect = sqlite3.connect(books_file)
    cursor = connect.cursor()
    cursor.execute('DELETE FROM books WHERE name=?', (name,))
    connect.commit()
    connect.close()


def get_all():
    connect = sqlite3.connect(books_file)
    cursor = connect.cursor()
    cursor.execute('SELECT * FROM books')
    content = cursor.fetchall()
    connect.commit()
    connect.close()

    return content

